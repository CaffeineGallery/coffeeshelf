#!/bin/bash
# üóÉÔ∏è CoffeeShelf - Terminal Shelf Dashboard for Coffee Shell

# Plugin metadata
SHELF_DIR="$HOME/.caffeine/plugins/coffeeshelf"
CONFIG_FILE="$SHELF_DIR/config.conf"
MODULES_DIR="$SHELF_DIR/modules"
TUI_LIB="$SHELF_DIR/lib/bundle.bash"

# Load TUI library
if [[ -f "$TUI_LIB" ]]; then
  source "$TUI_LIB"
else
  echo "‚ùå bash-tui-toolkit not found at $TUI_LIB"
  exit 1
fi

# Create a config if it doesn't exist
if [[ ! -f "$CONFIG_FILE" ]]; then
    touch "$CONFIG_FILE"
fi

# Load config
source "$CONFIG_FILE"

# Load modules
load_modules() {
  for module in "${MODULES[@]}"; do
    MODULE_PATH="$MODULES_DIR/$module.sh"
    if [[ -f "$MODULE_PATH" ]]; then
      source "$MODULE_PATH"
    else
      echo "‚ö†Ô∏è Module $module not found."
    fi
  done
}

# Display Shelf with TUI
show_shelf() {

  # Draw widgets
  local output=""
  output+="üóÉÔ∏è CoffeeShelf - Your Coffee Dashboard\n"
  output+="--------------------------------------\n\n"

  for widget in "${WIDGETS[@]}"; do
    if declare -f "$widget" > /dev/null; then
      output+="$($widget)\n\n"
    else
      output+="‚ö†Ô∏è  Widget function '$widget' not found.\n\n"
    fi
  done

  output+="--------------------------------------\n"
  output+="(r) Reload shelf | (q) Quit\n"

  whiptail --title "CoffeeShelf" --msgbox "$output" 30 30

  while true; do
    read -rsn1 key
    case "$key" in
      q|Q) tui::shutdown; break ;;
      r|R|"") show_shelf; return ;;
      *) show_error "Unknown option: $key" ;;
    esac
  done
}

# Main entry point
main() {
  mkdir -p "$SHELF_DIR/logs"
  load_modules
  show_shelf
}

main
